syntax = "proto3";

package kraken;

// Service definition
service KrakenServiceRegistryService {
  rpc registerService (registerServiceRequest) returns (registerServiceResponse) {}
}

service KrakenConfigService {
  rpc getConfig (EmptyRequest) returns (getConfigResponse) {}
}

// Request and response messages
message registerServiceRequest {
  string url = 1;
  uint32 heartbeat_duration_in_sec = 2;
  ServiceTypeEnum type = 3;
}

message registerServiceResponse {
  bool success = 1;
  optional string message = 2;
}

message EmptyRequest {}

// Configuration messages
message getConfigResponse {
  Retention retention = 1;
  Fees fees = 2;
  string name = 3;
  string description = 4;
  string pubkey = 5;
  string contact = 6;
  string software = 7;
  repeated int32 supported_nips = 8;
  string version = 9;
  repeated string relay_countries = 10;
  repeated string language_tags = 11;
  repeated string tags = 12;
  string posting_policy = 13;
  string payments_url = 14;
  string icon = 15;
  string url = 16;
}

// Data structure messages
message Retention {
  int32 time = 1;
  int32 count = 2;
  repeated int32 kinds = 3;
}

message Subscription {
  int32 amount = 1;
  string unit = 2;
  int32 period = 3;
}

message Admission {
  int32 amount = 1;
  string unit = 2;
}

message Publication {
  repeated int32 kinds = 1;
  int32 amount = 2;
  string unit = 3;
}

message Fees {
  repeated Subscription subscription = 1;
  repeated Publication publication = 2;
  repeated Admission admission = 3;
}

// Enum definitions
enum ServiceTypeEnum {
  RELAY = 0;
}
